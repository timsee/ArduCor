/*!
 * RGB-LED-Routines
 * LightingGUI
 *
 * A Qt-based GUI for controlling LED arrays.
 *
 * Github repository: http://www.github.com/timsee/RGB-LED-Routines
 * License: MIT-License, LICENSE provided in root of git repo
 */

#ifndef COLORWHEEL_H
#define COLORWHEEL_H

#include <QLabel>
#include <QMouseEvent>
#include <QPoint>

/*!
 * The ColorWheel class provides a color wheel that shows all hues
 * within the visual spectrum, and allows the user to click anywhere
 * in the color wheel and it will send a signal of that specific color.
 *
 * The ColorWheel's image was generated by a modified version of this script:
 * https://github.com/jacksongabbard/Python-Color-Gamut-Generator
 * The modifications kept the consistent hue shift based on angle, but
 * made it so that it uses 3/4 of the radius to generate a mix of
 * the hue and black, while the remaining 1/4 mixes the hue with white.
 */
class ColorWheel : public QLabel
{
    Q_OBJECT

public:
    ColorWheel(QWidget *parent = 0);
    ~ColorWheel();

/*!
 * emits color updates based off of the mouse movements
 */
signals:
    void colorWheelUpdate(int, int, int);

/*!
 * Overrides the mouse events in order to pick up touch events.
 * These events are used to choose a color.
 */
protected:
    virtual void mouseMoveEvent(QMouseEvent* event);
    virtual void mousePressEvent(QMouseEvent* event);
    virtual void mouseReleaseEvent(QMouseEvent* event);

private:
    /*!
     * \brief map map function from arduino: https://www.arduino.cc/en/Reference/Map
     * \param x the value getting the map applied
     * \param in_min the original minimum possible value of x
     * \param in_max the original maximum possible value of x
     * \param out_min the new minimum possible value of x
     * \param out_max the new maximum possibel value of x
     * \return x mapped from the range of in_min->in_max to the range of out_min->out_max
     */
    int map(int x, int in_min, int in_max, int out_min, int out_max);
};


#endif // COLORWHEEL_H
