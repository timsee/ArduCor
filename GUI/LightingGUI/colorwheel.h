
#ifndef COLORWHEEL_H
#define COLORWHEEL_H

#include <QLabel>
#include <QMouseEvent>
#include <QPoint>

/*!
 * \copyright
 * Copyright (C) 2015 - 2016. All Rights MIT Licensed.
 *
 * \brief The ColorWheel class provides a color wheel that allows a user
 * to click anywhere on a wheel of all possible colors and have that color
 * be sent as a signal.
 *
 * The ColorWheel's image was generated by a modified version of Jackson Gabbard's
 * <a href="https://github.com/jacksongabbard/Python-Color-Gamut-Generator">Python Color Gamut Generator</a>.
 * The modifications removed the insider circle and adjusted Saturation and Value shifting as you go further
 * from the center of the circle.
 *
 */
class ColorWheel : public QLabel
{
    Q_OBJECT

public:
    ColorWheel(QWidget *parent = 0);
    ~ColorWheel();

/*!
 * emits color updates based off of the mouse movements
 */
signals:
    void colorWheelUpdate(QColor);

/*!
 * Overrides the mouse events in order to pick up touch events.
 * These events are used to choose a color.
 */
protected:
    virtual void mouseMoveEvent(QMouseEvent *event);
    virtual void mousePressEvent(QMouseEvent *event);
    virtual void mouseReleaseEvent(QMouseEvent *event);

private:
    /*!
     * \brief map map function from arduino: https://www.arduino.cc/en/Reference/Map
     * \param x the value getting the map applied
     * \param in_min the original minimum possible value of x
     * \param in_max the original maximum possible value of x
     * \param out_min the new minimum possible value of x
     * \param out_max the new maximum possibel value of x
     * \return x mapped from the range of in_min->in_max to the range of out_min->out_max
     */
    int map(int x, int in_min, int in_max, int out_min, int out_max);
};


#endif // COLORWHEEL_H
